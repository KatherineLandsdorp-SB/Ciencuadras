plugins {
    id 'java'
    id "application"
}

group = 'com.segurosbolivar.automation'
version = '1.0.0'
description = 'SegurosBolivar_UI_Automation'

java.sourceCompatibility(JavaVersion.VERSION_1_8)
java.targetCompatibility(JavaVersion.VERSION_1_8)

repositories {
    mavenLocal()

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.apache.commons:commons-text:1.6'
    implementation 'org.testng:testng:7.0.0'
    implementation 'io.qameta.allure:allure-testng:2.10.0'
    implementation 'org.awaitility:awaitility:3.0.0'
    implementation 'com.sun.jersey:jersey-bundle:1.19.4'
    implementation 'org.codehaus.jettison:jettison:1.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useTestNG() {
        useDefaultListeners = true // Tells TestNG to execute its default reporting structure
        suites 'src/test/java/resources/testNG.xml'
    }
}

/* Implementacion para generar jar
*  donde se guarda:  /build/libs/
*  construir jar : gradle assemble
*  ejecutar jar: java -jar /build/libs/<nombre>.jar
*
*/
mainClassName = "com.segurosbolivar.automation.TestClass"

jar {
    archiveBaseName = 'ciencuadras'
    classifier('test')
    from sourceSets.test.output
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    /*   test {
        def groups = System.getProperty('groups', 'sanity')
        useTestNG() {
            includeGroups groups
        }


    }


    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }*/

}

